{"version":3,"file":"index.js","sources":["src/array/tostring.js","src/array/arrAttrUnique.js","src/number/getRoundNumber.js","src/number/formatPrice.js","src/formatdate/getNowTime.js","src/formatdate/getTimeStamp.js","src/formatdate/formatdate.js","src/formatdate/formatCountDown.js","src/index.js"],"sourcesContent":["/**\n * 将数组转换成字符串\n *\n * @param {Array} arrList 要转换的数据\n * @returns {String} 转换后的字符串格式\n *\n * tostringFun([1, 2, 3])\n * => 1, 2, 3\n *\n */\nfunction tostringFun(arrList) {\n  return arrList.toString();\n}\nexport default tostringFun;\n","/**\n * 根据数组对象中某个属性进行去重\n *\n * @param {Array} arrList 需要去重的数组\n * @param {String} key 需要根据哪个属性进行去重\n * @returns {Array} 去重之后返回的新数组\n *\n * arrAttrUnique([{id: 1, name: 'zhangsan'}, {id: 2, name: 'lisi'}, {id: 1, name: 'wangwu'}])\n * => [{id: 1, name: 'zhangsan}, {id: 2, name: 'lisi'}]\n */\n\nfunction arrAttrUnique(arrList = [], key = \"id\") {\n  const res = new Map();\n  return arrList.filter((iten) => !res.has(iten[key]) && res.set(iten[key], 1));\n}\nexport default arrAttrUnique;\n","/**\n * 按照区间生成随机数\n *\n * @param {number} min 最小值 默认0\n * @param {number} max 最大值 默认1\n * @param {number} number 要生成几个随机数\n * @returns {number|array}  生成的随机数 [min, max] 左闭右闭区间\n *\n * getRoundNumber(5, 15, 3)\n * => [9, 6, 13]\n *\n * getRoundNumber(6, 20, 1)\n * => 10\n */\n\nfunction getRoundNumber(min = 0, max = 1, number = 1) {\n    const tempMin = Math.ceil(min);\n    const tempMax = Math.floor(max);\n    const result = [];\n\n    for (let i = 0; i < number; i++) {\n      result.push(\n        Math.floor(Math.random() * (tempMax - tempMin + 1)) + tempMin\n      );\n    }\n\n    return number === 1 ? result[0] : result;\n}\nexport default getRoundNumber;\n","/**\n * 格式化价格(每隔3位一个逗号)\n *\n * @param {number} price 价格\n * @param {number} decimal 是否需要小点两位; 如果价格已是小数，则此参数无效\n * @return {string} 被格式化后的价格,例如 '123,456,789.00'\n *\n * formatPrice(123456789)\n * => '123,456,789'\n *\n * formatPrice(123456789, true)\n * => '123,456,789.00'\n *\n * formatPrice(123456789.00, true)\n * => '123,456,789.00'\n *\n * formatPrice(123456789.00)\n * => '123,456,789.00'\n *\n * formatPrice(123456789.8)\n * => '123,456,789.80'\n *\n */\n\nfunction formatPrice(price, decimal = false) {\n  const regExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\n  if (decimal || price.toString().includes(\".\")) {\n    return price.toFixed(2).toString().replace(regExp, \",\");\n  }\n\n  return price.toString().replace(regExp, \",\");\n}\nexport default formatPrice;\n","/**\n * 获取当前时间戳\n *\n * @returns {number} 当前时间戳\n *\n * getNowTime()\n * => 1610431852976\n */\n\nfunction getNowTime() {\n  return Date.now();\n}\nexport default getNowTime;\n","/**\n * 获取某个日期对应的时间戳\n *\n * @param {string} date 要获取的日期, 默认为当前日期\n * @returns {number} 该日期对应的时间戳 单位毫秒\n *\n * getTimeStamp('2014/07/10 10:21:12')\n * => 1558598298166\n *\n * getTimeStamp()\n * => 1558598298166\n *\n * getTimeStamp('2014-07-10 10:21:12')\n * => 1558598298166\n *\n */\n\nfunction getTimeStamp(date) {\n  const dateString = new Date(date ? date.replace(/-/g, \"/\") : new Date());\n  return dateString;\n}\nexport default getTimeStamp;\n","/**\n * 格式化时间戳\n *\n * @param {number} timeStamp 时间戳, 默认为当前日期对应的时间戳, 单位毫秒\n * @returns {object} 被格式化后的对象 { year: 2019, month: 5, day: 23, hour: 23, minute: 26, second: 11, millisecond: 753 }\n *\n * formatDate()\n * => { year: 2019, month: 5, day: 23, hour: 23, minute: 26, second: 11, millisecond: 753 }\n *\n * formatDate(1558622540000)\n * => { year: 2019, month: 5, day: 23, hour: 22, minute: 42, second: 20, millisecond: 0 }\n *\n * formatDate(-1378218728000) 参数可以是负整数，代表1970年元旦之前的时间\n * => { year: 1926, month: 4, day: 30, hour: 17, minute: 27, second: 52, millisecond: 0 }\n */\n\nfunction formatdate(timeStamp = Date.now()) {\n  const date = new Date(timeStamp);\n\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    second: date.getSeconds(),\n    millisecond: date.getMilliseconds(),\n  };\n}\nexport default formatdate;\n","/**\n * 格式化倒计时时间\n *\n * @param {number} timeStamp 时间戳 (两个时间戳的差值) 单位毫秒\n * @returns {object} 被格式化后的对象\n *\n * formatCountDown(642567521)\n * => { day: 7, hour: 10, minute: 29, second: 27, millisecond: 521 }\n *\n * formatCountDown(-123)\n * => { day: 0, hour: 0, minute: 0, second: 0, millisecond: 0 }\n * 在业务中可以判断展示时分秒，也可以判断为0不展示等业务操作\n */\n\nfunction formatCountDown(timeStamp) {\n  if (timeStamp <= 0) {\n    return {\n      day: 0,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n    };\n  }\n\n  const dayStamp = 24 * 60 * 60 * 1000;\n  const hourStamp = 60 * 60 * 1000;\n  const minuteStamp = 60 * 1000;\n  const secondStamp = 1000;\n  const millisecondStamp = 1000;\n\n  const day = (timeStamp / dayStamp) | 0;\n  const hour = ((timeStamp % dayStamp) / hourStamp) | 0;\n  const minute = (((timeStamp % dayStamp) % hourStamp) / minuteStamp) | 0;\n  const second =\n    ((((timeStamp % dayStamp) % hourStamp) % minuteStamp) / secondStamp) | 0;\n  const millisecond =\n    (((timeStamp % dayStamp) % hourStamp) % minuteStamp) % millisecondStamp;\n\n  return { day, hour, minute, second, millisecond };\n}\nexport default formatCountDown;\n","// array\nimport tostringFun from \"./array/tostring\";\nimport arrAttrUnique from \"./array/arrAttrUnique\";\n\n// number\nimport getRoundNumber from \"./number/getRoundNumber\";\nimport formatPrice from \"./number/formatPrice\";\n\n// formatdate\nimport getNowTime from \"./formatdate/getNowTime\";\nimport getTimeStamp from \"./formatdate/getTimeStamp\";\nimport formatdate from \"./formatdate/formatdate\";\nimport formatCountDown from \"./formatdate/formatCountDown\";\n\nconst JSUtil = {\n  tostringFun,\n  arrAttrUnique,\n  getRoundNumber,\n  formatPrice,\n  getNowTime,\n  getTimeStamp,\n  formatdate,\n  formatCountDown,\n};\nexport default JSUtil;\n"],"names":["tostringFun","arrList","toString","arrAttrUnique","key","res","Map","filter","iten","has","set","getRoundNumber","min","max","number","tempMin","Math","ceil","tempMax","floor","result","i","push","random","formatPrice","price","decimal","regExp","includes","toFixed","replace","getNowTime","Date","now","getTimeStamp","date","dateString","formatdate","timeStamp","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","formatCountDown","dayStamp","hourStamp","minuteStamp","secondStamp","millisecondStamp","JSUtil"],"mappings":"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"}